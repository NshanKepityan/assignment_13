//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Res", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial struct Res : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReference1.Book[] BooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReference1.Book[] Books {
            get {
                return this.BooksField;
            }
            set {
                if ((object.ReferenceEquals(this.BooksField, value) != true)) {
                    this.BooksField = value;
                    this.RaisePropertyChanged("Books");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/Library")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILibrary")]
    public interface ILibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/AllBooks", ReplyAction="http://tempuri.org/ILibrary/AllBooksResponse")]
        Client.ServiceReference1.Res AllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/AllBooks", ReplyAction="http://tempuri.org/ILibrary/AllBooksResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Res> AllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/NewBook", ReplyAction="http://tempuri.org/ILibrary/NewBookResponse")]
        Client.ServiceReference1.Res NewBook(Client.ServiceReference1.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/NewBook", ReplyAction="http://tempuri.org/ILibrary/NewBookResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Res> NewBookAsync(Client.ServiceReference1.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/UpdatePrice", ReplyAction="http://tempuri.org/ILibrary/UpdatePriceResponse")]
        Client.ServiceReference1.Res UpdatePrice(int Id, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrary/UpdatePrice", ReplyAction="http://tempuri.org/ILibrary/UpdatePriceResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.Res> UpdatePriceAsync(int Id, double price);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryChannel : Client.ServiceReference1.ILibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryClient : System.ServiceModel.ClientBase<Client.ServiceReference1.ILibrary>, Client.ServiceReference1.ILibrary {
        
        public LibraryClient() {
        }
        
        public LibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceReference1.Res AllBooks() {
            return base.Channel.AllBooks();
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Res> AllBooksAsync() {
            return base.Channel.AllBooksAsync();
        }
        
        public Client.ServiceReference1.Res NewBook(Client.ServiceReference1.Book book) {
            return base.Channel.NewBook(book);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Res> NewBookAsync(Client.ServiceReference1.Book book) {
            return base.Channel.NewBookAsync(book);
        }
        
        public Client.ServiceReference1.Res UpdatePrice(int Id, double price) {
            return base.Channel.UpdatePrice(Id, price);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.Res> UpdatePriceAsync(int Id, double price) {
            return base.Channel.UpdatePriceAsync(Id, price);
        }
    }
}
